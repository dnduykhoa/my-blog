<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on Blog Lập Trình</title><link>https://dnduykhoa.github.io/my-blog/tags/javascript/</link><description>Recent content in Javascript on Blog Lập Trình</description><generator>Hugo</generator><language>vi</language><lastBuildDate>Fri, 03 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://dnduykhoa.github.io/my-blog/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Tổng quan: Học JavaScript từ cơ bản đến ứng dụng</title><link>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-overview/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-overview/</guid><description>&lt;hr&gt;
&lt;h2 id="1-mở-đầu"&gt;1. Mở đầu&lt;/h2&gt;
&lt;p&gt;Xin chào bạn 👋,
Nếu bạn đang tìm hiểu về &lt;strong&gt;lập trình web&lt;/strong&gt;, chắc chắn bạn sẽ gặp cái tên &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;JavaScript chính là ngôn ngữ giúp các trang web trở nên &lt;strong&gt;sống động và tương tác&lt;/strong&gt;. Không có JS, web chỉ là những trang HTML tĩnh.&lt;/p&gt;
&lt;p&gt;👉 Chính vì vậy, việc học JavaScript là bước đi đầu tiên để trở thành &lt;strong&gt;Front-end Developer&lt;/strong&gt;, hoặc xa hơn là &lt;strong&gt;Fullstack Developer&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title>JavaScript Cơ Bản – Nền tảng ngôn ngữ web</title><link>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-basic/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-basic/</guid><description>&lt;hr&gt;
&lt;h2 id="1-mở-đầu"&gt;1. Mở đầu&lt;/h2&gt;
&lt;p&gt;Nếu HTML là phần “xác” của một trang web, CSS là phần “trang điểm”, thì JavaScript chính là &lt;strong&gt;linh hồn&lt;/strong&gt; giúp trang web sống động và tương tác.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lần đầu mình thử viết JS, mình thêm &lt;code&gt;document.getElementById(&amp;quot;demo&amp;quot;).innerText = &amp;quot;Hello JS&amp;quot;;&lt;/code&gt; mà chẳng thấy gì thay đổi. Sau một hồi loay hoay, mình mới phát hiện ra mình… gõ sai &lt;code&gt;id&lt;/code&gt; 😅. Đây là “cú ngã đầu đời” giúp mình nhớ rằng kiểm tra lại code cẩn thận là rất quan trọng. Bạn có từng bị như vậy chưa?&lt;/p&gt;</description></item><item><title>Cấu trúc điều khiển và Hàm trong JavaScript</title><link>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-control-functions/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-control-functions/</guid><description>&lt;hr&gt;
&lt;h2 id="1-mở-đầu"&gt;1. Mở đầu&lt;/h2&gt;
&lt;p&gt;Trong bài 1, bạn đã làm quen với &lt;strong&gt;biến, kiểu dữ liệu và toán tử&lt;/strong&gt;. Nhưng chỉ có dữ liệu thôi thì chưa đủ – chúng ta cần &lt;strong&gt;xử lý logic&lt;/strong&gt; để chương trình có thể đưa ra quyết định.&lt;/p&gt;
&lt;p&gt;Đây là lúc các cấu trúc điều khiển (if, switch, vòng lặp) và &lt;strong&gt;hàm&lt;/strong&gt; xuất hiện.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mình còn nhớ hồi đầu học JS, mình viết &lt;code&gt;if (x = 5)&lt;/code&gt; thay vì &lt;code&gt;if (x == 5)&lt;/code&gt; 😅. Kết quả là chương trình chạy sai hoàn toàn mà mình không hiểu tại sao. Sau đó mới nhận ra mình đã gán giá trị thay vì so sánh. Bạn có bao giờ nhầm như thế chưa?&lt;/p&gt;</description></item><item><title>Đối tượng, Mảng và OOP trong JavaScript</title><link>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-objects-arrays-oop/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-objects-arrays-oop/</guid><description>&lt;hr&gt;
&lt;h2 id="1-mở-đầu"&gt;1. Mở đầu&lt;/h2&gt;
&lt;p&gt;Trong bài 2, bạn đã biết cách sử dụng &lt;strong&gt;if, vòng lặp và hàm&lt;/strong&gt; để xử lý logic. Nhưng khi chương trình lớn hơn, bạn sẽ cần cách &lt;strong&gt;tổ chức dữ liệu&lt;/strong&gt; hiệu quả hơn.&lt;/p&gt;
&lt;p&gt;👉 Đó là lý do có &lt;strong&gt;Object (đối tượng)&lt;/strong&gt; và &lt;strong&gt;Array (mảng)&lt;/strong&gt;, hai cấu trúc dữ liệu cốt lõi trong JavaScript. Và để nâng cao, ta có &lt;strong&gt;OOP (Object-Oriented Programming)&lt;/strong&gt; với class và prototype.&lt;/p&gt;</description></item><item><title>DOM &amp; Tương tác với Web trong JavaScript</title><link>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-dom-web/</link><pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate><guid>https://dnduykhoa.github.io/my-blog/blogs/javascript/javascript-dom-web/</guid><description>&lt;hr&gt;
&lt;h2 id="1-mở-đầu"&gt;1. Mở đầu&lt;/h2&gt;
&lt;p&gt;Bạn đã biết &lt;strong&gt;Object, Array, OOP&lt;/strong&gt; trong JavaScript. Nhưng JS sẽ chẳng có ý nghĩa gì nếu nó không &lt;strong&gt;tương tác với HTML/CSS&lt;/strong&gt; để làm web sống động.&lt;/p&gt;
&lt;p&gt;👉 Đó chính là &lt;strong&gt;DOM (Document Object Model)&lt;/strong&gt; – cây mô hình đại diện cho toàn bộ trang web.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mình còn nhớ lần đầu viết code &lt;code&gt;document.getElementById(&amp;quot;title&amp;quot;).innerText = &amp;quot;Xin chào JS&amp;quot;;&lt;/code&gt; và thấy ngay dòng chữ trên web thay đổi. Mình cảm thấy “wow, mình vừa điều khiển được cả website bằng code của mình!”. Bạn có nhớ lần đầu tiên bạn thấy web “chuyển động” nhờ JS không?&lt;/p&gt;</description></item></channel></rss>